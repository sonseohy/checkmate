image: docker:latest

stages:
  - build
  - deploy

variables:
  DOCKER_IMAGE: checkmate-be

before_script:
  - echo "üöÄ Î∞±ÏóîÎìú GitLab CI ÏãúÏûë"
  - docker --version

build_checkmate_be:
  stage: build
  only:
    - be
  script:
    - cd checkmate-be
    # ‚úÖ application-secret.yml ÏÉùÏÑ±
    - echo "$APPLICATION_SECRET_YML" > src/main/resources/application-secret.yml
    # ‚úÖ .env ÌååÏùº ÏÉùÏÑ±
    - echo "$BACKEND_ENV" > .env
    - echo "‚úÖ application-secret.yml, .env ÌååÏùº ÏÉùÏÑ± ÏôÑÎ£å"
    # ‚úÖ Docker Ïù¥ÎØ∏ÏßÄ Ï†ïÎ¶¨ Î∞è ÎπåÎìú
    - docker stop $DOCKER_IMAGE || true
    - docker rm $DOCKER_IMAGE || true
    - docker rmi $DOCKER_IMAGE || true
    - docker build -t $DOCKER_IMAGE .
  artifacts:
    paths:
      - checkmate-be/.env
      - checkmate-be/build/libs/
  after_script:
    - |
      if [ "$CI_JOB_STATUS" == "success" ]; then
        curl -X POST -H 'Content-Type: application/json' \
        -d "{\"text\": \"‚úÖ [Î∞±ÏóîÎìú ÎπåÎìú ÏÑ±Í≥µ] $CI_PROJECT_NAME - $CI_COMMIT_BRANCH\"}" $MATTERMOST_WEBHOOK
      else
        curl -X POST -H 'Content-Type: application/json' \
        -d "{\"text\": \"‚ùå [Î∞±ÏóîÎìú ÎπåÎìú Ïã§Ìå®] $CI_PROJECT_NAME - $CI_COMMIT_BRANCH\"}" $MATTERMOST_WEBHOOK
      fi

deploy_checkmate_be:
  stage: deploy
  only:
    - be
  script:
    - echo "$BACKEND_ENV" > checkmate-be/.env
    - docker stop $DOCKER_IMAGE || true
    - docker rm $DOCKER_IMAGE || true
    - docker run -d --name $DOCKER_IMAGE -p 8080:8080 --env-file checkmate-be/.env $DOCKER_IMAGE

after_script:
  - |
    if [ "$CI_JOB_STATUS" == "success" ]; then
      curl -X POST -H 'Content-Type: application/json' \
      -d "{\"text\": \"‚úÖ [Î∞±ÏóîÎìú Î∞∞Ìè¨ ÏÑ±Í≥µ] $CI_PROJECT_NAME - $CI_COMMIT_BRANCH\"}" $MATTERMOST_WEBHOOK
    else
      curl -X POST -H 'Content-Type: application/json' \
      -d "{\"text\": \"‚ùå [Î∞±ÏóîÎìú Î∞∞Ìè¨ Ïã§Ìå®] $CI_PROJECT_NAME - $CI_COMMIT_BRANCH\"}" $MATTERMOST_WEBHOOK
    fi

