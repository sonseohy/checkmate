package com.checkmate.global.common.service;

import lombok.RequiredArgsConstructor;
import org.springframework.scheduling.annotation.Async;
import org.springframework.stereotype.Service;
import xyz.capybara.clamav.ClamavClient;
import xyz.capybara.clamav.commands.scan.result.ScanResult;

import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.util.concurrent.CompletableFuture;

@Service
@RequiredArgsConstructor
public class MalwareScanService {
    private final ClamavClient clamavClient;

    public boolean isCleanSync(InputStream in) {
        ScanResult result = clamavClient.scan(in);
        return result instanceof ScanResult.OK;
    }

    @Async("clamavExecutor")
    public CompletableFuture<Boolean> isCleanAsync(byte[] data) {
        InputStream in = new ByteArrayInputStream(data);
        ScanResult result = clamavClient.scan(in);
        return CompletableFuture.completedFuture(result instanceof ScanResult.OK);
    }
}
